name: Export pull request tests

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "export/**"
      - ".github/workflows/export-pull-request.yml"

env:
  AWS_REGION: ca-central-1

permissions:
  id-token: write
  contents: read

jobs:
  export-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        export:
          - platform/support/freshdesk
    steps:
      - name: Audit DNS requests
        uses: cds-snc/dns-proxy-action@main
        env:
          DNS_PROXY_FORWARDTOSENTINEL: "true"
          DNS_PROXY_LOGANALYTICSWORKSPACEID: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
          DNS_PROXY_LOGANALYTICSSHAREDKEY: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: dorny/paths-filter@7267a8516b6f92bdb098633497bad573efdbf271 # v2.12.0
        id: changes
        with:
          filters: |
            export:
              - '${{ matrix.export }}/**'
              - '.github/workflows/export-pull-request.yml'

      - name: Configure AWS credentials using OIDC
        if: steps.changes.outputs.export == 'true'
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::739275439843:role/data-lake-plan
          role-session-name: ExportPullRequest
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        if: steps.changes.outputs.export == 'true'
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1 

      - name: Setup python
        if: steps.changes.outputs.export == 'true'
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: "3.13"

      - name: Run PR tests
        if: steps.changes.outputs.export == 'true'
        working-directory: ./export/${{ matrix.export }}
        run: make ARGS=--check pull_request
