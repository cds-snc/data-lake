name: "Terragrunt apply STAGING"

on:
  push:
    branches:
      - main
    paths:
      - "terragrunt/aws/**"
      - "terragrunt/env/staging/**"
      - "terragrunt/env/common/**"
      - "terragrunt/env/root.hcl"
      - ".github/workflows/terragrunt-apply-staging.yml"

env:
  AWS_REGION: ca-central-1
  CONFTEST_VERSION: 0.27.0
  TERRAFORM_VERSION: 1.13.0
  TERRAGRUNT_VERSION: 0.68.6
  TF_INPUT: false
  TF_VAR_cloudwatch_alarm_slack_webhook: ${{ secrets.STAGING_SLACK_WEBHOOK_OPS }}
  TF_VAR_freshdesk_api_key: ${{ secrets.STAGING_FRESHDESK_API_KEY }}
  TF_VAR_airtable_api_key: ${{ secrets.STAGING_AIRTABLE_API_KEY }}
  TF_VAR_airtable_base_id: ${{ secrets.STAGING_AIRTABLE_BASE_ID }}
  TF_VAR_airtable_table_name: ${{ secrets.STAGING_AIRTABLE_TABLE_NAME }}

permissions:
  id-token: write
  contents: read

jobs:
  terragrunt-apply-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@cc15ce9039f6c37c592fb9930b70466b229d2e9b # v1

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: arn:aws:iam::454671348950:role/data-lake-apply
          role-session-name: TFApply
          aws-region: ${{ env.AWS_REGION }}

      - name: Terragrunt apply oidc
        working-directory: terragrunt/env/staging/oidc
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply buckets
        working-directory: terragrunt/env/staging/buckets
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply glue
        working-directory: terragrunt/env/staging/glue
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply athena
        working-directory: terragrunt/env/staging/athena
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply alarms
        working-directory: terragrunt/env/staging/alarms
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply export
        working-directory: terragrunt/env/staging/export
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply stepfunctions
        working-directory: terragrunt/env/staging/stepfunctions
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Report deployment to Sentinel
        if: always()
        uses: cds-snc/sentinel-forward-data-action@717c852022dff8e51f34a4b59702f8d684b0eb3d
        with:
          input_data: '{"product": "data-lake", "sha": "${{ github.sha }}", "version": "Infrastructure ${{ github.sha }}", "repository": "${{ github.repository }}", "environment": "staging", "status": "${{ job.status }}"}'
          log_type: CDS_Product_Deployment_Data
          log_analytics_workspace_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
          log_analytics_workspace_key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}
