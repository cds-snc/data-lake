name: "Terragrunt apply PRODUCTION"

on:
  release:
    types:
    - published

env:
  AWS_REGION: ca-central-1
  CONFTEST_VERSION: 0.27.0
  TERRAFORM_VERSION: 1.12.2
  TERRAGRUNT_VERSION: 0.68.6
  TF_INPUT: false
  TF_VAR_cloudwatch_alarm_slack_webhook: ${{ secrets.PRODUCTION_SLACK_WEBHOOK_OPS }}
  TF_VAR_freshdesk_api_key: ${{ secrets.PRODUCTION_FRESHDESK_API_KEY }}
  TF_VAR_airtable_api_key: ${{ secrets.PRODUCTION_AIRTABLE_API_KEY }}
  TF_VAR_airtable_base_id: ${{ secrets.PRODUCTION_AIRTABLE_BASE_ID }}
  TF_VAR_airtable_table_name: ${{ secrets.PRODUCTION_AIRTABLE_TABLE_NAME }}

permissions:
  id-token: write
  contents: read

jobs:
  terragrunt-apply-production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@cc15ce9039f6c37c592fb9930b70466b229d2e9b # v1

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: arn:aws:iam::${{ vars.PROD_AWS_ACCOUNT_ID }}:role/data-lake-release
          role-session-name: TFApply
          aws-region: ${{ env.AWS_REGION }}

      - name: Terragrunt apply oidc
        working-directory: terragrunt/env/production/oidc
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply buckets
        working-directory: terragrunt/env/production/buckets
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply glue
        working-directory: terragrunt/env/production/glue
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply athena
        working-directory: terragrunt/env/production/athena
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply alarms
        working-directory: terragrunt/env/production/alarms
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply export
        working-directory: terragrunt/env/production/export
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Terragrunt apply stepfunctions
        working-directory: terragrunt/env/production/stepfunctions
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Report deployment to Sentinel
        if: always()
        uses: cds-snc/sentinel-forward-data-action@717c852022dff8e51f34a4b59702f8d684b0eb3d
        with:
          input_data: '{"product": "data-lake", "sha": "${{ github.ref_name }}", "version": "Infrastructure ${{ github.ref_name }}", "repository": "${{ github.repository }}", "environment": "production", "status": "${{ job.status }}"}'
          log_type: CDS_Product_Deployment_Data
          log_analytics_workspace_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
          log_analytics_workspace_key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}
